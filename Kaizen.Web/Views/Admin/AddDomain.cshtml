 @model IEnumerable<Kaizen.Models.ViewUserModel.DomainModel>

@{
    Layout = "SidebarLayout";
}

<link href="~/assets/css/costom/adddomain.css" rel="stylesheet" />
<link href="~/assets/css/common/datatables.min.css" rel="stylesheet" />
<script src="~/assets/js/custom/datatables.min.js"></script>



<div class="container-fluid p-2">
    <div class=" card p-3 mt-2 mb-2 cardsize" id="card-block">
        <div class="row">
            <div class="col-5">
                <label for="Domain-name">Domain Name<span class="text-danger">*</span></label>
            </div>
        </div>

        <div class="row">
            <div class="col-8">
                <input class="form-control" id="domainname" name="domainname" asp-for="" />
                <span id="DomainError" class="text-danger error-message"></span>
            </div>
            <div class="col-2">
                <input class="btn btn-azure" id="btnAdd" value="Add" type="button" />
            </div>
        </div>
    </div>
    <div class="card domainCardBody p-3" id="cardBodyDomainHeight">

        <div class="row">
            <div class="col-md-10">
                <p>Domain Names - @Model.Count()</p>
            </div>
        </div>
        <div class="col-12"><hr></div>

        <div class="table table-striped">
            <table id="empTable" class="table table-responsive-sm text-center">
                <thead>
                    <tr>
                        <th hidden scope="col" class="text-center" id="DomName">SNo</th>
                        <th scope="col" class="text-center" id="DomName">DOMAIN NAME</th>
                        <th scope="col" class="text-center" id="DomName">TOTAL EMP</th>
                        <th scope="col" class="text-center" id="DomName">STATUS</th>
                        <th scope="col" class="text-center" id="DomName">ACTION</th>
                    </tr>
                </thead>
                <tbody class="table-group-divider">
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td hidden>@item.id</td>
                            <td>@item.DomainName</td>
                            <td class="text-center">0</td>
                            <td class="text-center">
                                @if (item.StatusID)
                                {
                                    <a href="/Admin/ActiveDomain?id=@item.id"><span class="btn btn-success badge-sm bd">Active</span></a>
                                }
                                else
                                {
                                    <a href="/Admin/IActiveDomain?id=@item.id"><span class="btn btn-warning badge-sm bd">Inactive</span></a>
                                }
                            </td>

                            <td class="text-center">
                                <a href="/Admin/DeleteDomain?id=@item.id" class="btn btn-danger   icon  deleteuser"><i class="fa-solid fa-trash-can"></i></a>
                            </td>

                        </tr>

                    }
                    <tr>
                        <td colspan="2" align="right">Total Employees</td>
                        <td class="text-center">@Model.Sum(i => i.TotalEmp)</td>
                        <td colspan="3"></td>
                    </tr> 

                </tbody>
            </table>
        </div>
    </div>
</div>


@* 
@{
    if (TempData["msg"] != null)
    {
        <script>
            swal('@TempData["msg"]')
        </script>
    }
}  *@
<script>

    $(document).ready(function () {
        $('#empTable').DataTable({});
    });



    function ValidateForm() {
        var isValid = true;

        // Remove red borders and error messages
        $("#domainname").css("border-color", "red");
        $("#DomainError").text("");
        $(".error-message").text("");

        // Check for empty or invalid fields
        var blockNameValue = $("#domainname").val();

        if (blockNameValue === "") {
            $("#domainname").css("border-color", "red");
            $("#DomainError").text("Domain Name is required.");
            isValid = false;
        }
        if (!isValid) {
            $("#error-message").text("Please fill in the required field correctly.");
            // Add red border to the submit button
            $("#submitButton").css("border-color", "red");
        }
        return isValid;
    }

    $(document).ready(function () {
        $("#btnAdd").click(function () {

            debugger;
            var domainName = $('#domainname').val();

            if (!ValidateForm()) {
                // If validation fails, return or perform any other necessary actions
                return;
            }
            $.ajax({
                type: 'POST',
                url: '/Admin/AddDomain',
                dataType: "json",
                data: { DomainName: domainName },
                success: function (result) {
                    // Handle success (if needed)
                    var res = $.isEmptyObject(result);

                    if (res) {
                        swal('please Enter Domain Name');
                    }
                    else {
                        // swal('Domain saved successfully!!');
                        location.reload();
                    }


                },
                error: function (error) {
                    // Handle errors (if needed)
                    // console.error('Error:', error);
                }
            });
        });
    });

</script>

