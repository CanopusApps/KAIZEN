@{
    var selectedTheme = ViewBag.SelectedTheme;
}

@model Kaizen.Models.AdminModel.LoginModel
@{
    Layout = "Empty";
}

@using (Html.BeginForm("Index", "Login", FormMethod.Post, new { id = "userForm" }))
{
    @Html.AntiForgeryToken()
    <style>
        * {
            overflow-y: hidden;
        }
        .topbar {
            background-color: gray;
            box-shadow: 0 1px 3px rgba(0, 0, 0, .1);
            border: 1px solid rgba(0, 0, 0, .15);
            color: white;
            text-align: center;
            padding-bottom: 10px;
        }
        h1{ 
            padding-top: 3px;
            height: 30px;
            font-size: x-large !important;
        }

        marquee {
            top: 0;
            left: 0;
            overflow: hidden;
            height: 45px;
            background-color: gray;
        }

    </style>

    <div class="topbar">
        <marquee width="100%" class="" direction="left" behavior="scroll" scrollamount="5">
            <h1 class="" style="color:white; font-size: x-large;" loginbox-title>
                Kaizen Winner for this month is
                <span style="color: rgb(45, 195, 232); font-weight:bold; font-size: x-large;">
                    @selectedTheme
                </span>.
                Congratulations Team!
            </h1>
        </marquee>
    </div>
    <div class="login-container animated fadeIn">
        <div class="logobox btn-azure padding-top-20 padding-bottom-20" style="color:white;text-align: center;font-size:xx-large;">
            Kaizen Application
        </div>
        <div class="loginbox bg-white">

            <div class="loginbox-title">Sign in to your account</div>
            <div class="loginbox-or">
                <div class="or-line"></div>
            </div>

            <div class="loginbox-textbox">
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.EmpId, "Emp ID", htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        <div>
                            @Html.EditorFor(model => model.EmpId, new { htmlAttributes = new { @class = "form-control col-md-6", placeholder = "Enter Employee Id", id = "EmpId" } })
                            @Html.ValidationMessageFor(model => model.EmpId, "", new { @class = "text-danger" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="loginbox-textbox">
                <div class="row">
                    <div class="form-group">
                        @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                        <span class="text-danger">*</span>
                        <div class="editor-container">
                            @Html.PasswordFor(model => model.Password, new { @class = "form-control", placeholder = "Enter your password", id = "Password" })
                            @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger validation-message" })
                        </div>
                    </div>
                </div>
            </div>

            <div class="loginbox-submit">
                <input type="submit" class="btn btn-block btn-azure" value="Sign in here" />
            </div>
            <a href="/Register/Index" class="padding-30">Register New User</a>

            <a href="/Login/Forgot">Forgot password</a>

        </div>
        <div class="col-sm-4"></div>
    </div>

    @if (TempData["loginmsg"] != null)
    {
        <script>
            swal('@TempData["loginmsg"]')
        </script>
    }
}

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery-validate/1.19.3/jquery.validate.min.js"></script>

<script>
    $(document).ready(function () {
        $("#userForm").on("keydown", function (e) {
            if ($.inArray(e.keyCode, [46, 8, 9, 27, 13]) !== -1 ||
                (e.keyCode === 65 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode === 67 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode === 88 && (e.ctrlKey === true || e.metaKey === true)) ||
                (e.keyCode >= 35 && e.keyCode <= 39)) {
                return;
            }
            // Ensure that it is a number and stop the keypress
            if ((e.shiftKey || (e.keyCode < 48 || e.keyCode > 57)) && (e.keyCode < 96 || e.keyCode > 105)) {
                e.preventDefault();
            }
        });
        $.validator.addMethod("exactlength", function (value, element, param) {
            return this.optional(element) || value.length === param;
        }, "Please enter exactly {0} digits.");

        $("#userForm").validate({
            errorClass: "text-danger",
            rules: {
                EmpId: {
                    required: true,
                    digits: true,
                    minlength: 6,
                    maxlength: 8
                },
                Password: {
                    required: true,
                    minlength: 6
                }
            },
            messages: {
                EmpId: {
                    required: "Employee ID is required",
                    digits: "Employee ID must be digits only",
                    minlength: "Employee ID must be a minimum of 6 and maximum of 8 digits only",
                    maxlength: "Employee ID must be a minimum of 6 and maximum of 8 digits only"
                },
                Password: {
                    required: "Password is required",
                    minlength: "Password must be at least 6 characters long"
                }
            },
            submitHandler: function (form) {
                form.submit();
            }
        });

        $("#EmpId, #Password").on('keyup', function () {
            $(this).valid();
        });
    });
</script>
