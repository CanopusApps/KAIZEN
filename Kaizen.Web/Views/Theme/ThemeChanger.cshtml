@model IEnumerable<Kaizen.Models.Theme.ThemeModel>

@{
    Layout = "SidebarLayout";
}
<style>
    .table-responsive {
        overflow-x:hidden!important;
    }
</style>
<link rel="stylesheet" href="~/assets/css/ThemeChanger.css" />

<div class="col-lg-12">
    <div class="row">
        <div class="col-lg-12">
            <div class="card mt-2">
                <div class="card-body p-3">
                    <div class="right-box-padding">
                        <div class="read-content">
                            <div class="row">
                                <div class="col">
                                    <p>Add Theme</p>
                                </div>
                            </div>
                            <div class="form-group row">
                                <div class="col-5">
                                    <input id="theme" class="form-control" placeholder="Enter theme" / maxlength="20">
                                    <span id="themeError" class="text-danger"></span> 
                                </div>
                                <div class="col-5">
                                    <input id="AddThemeBtn" type="button" value="Update" class="btn btn-azure" />
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>

        <div class="col-lg-12">
            <div class="card mt-2">
                <div class="card-body">
                    <div class="right-box-padding">
                        <div class="read-content">
                            <div class="row">
                                <div class="col">
                                    <p>Theme List</p>
                                </div>
                            </div>
                            <div class="form-group row p-3">
                                <div class="table-responsive mx-3">
                                    <table class="table table-bordered">
                                        <thead>
                                            <tr>
                                                <th class="text-center">Id</th>
                                                <th class="text-center">Theme Name</th>
                                            </tr>
                                        </thead>
                                        <tbody>
                                            @foreach (var dat in Model)
                                            {
                                                <tr>
                                                    <td class="text-center align-middle bg-light">
                                                        <p class="text-center">@Model.Count()</p>
                                                    </td>
                                                    <td class="align-middle bg-light">
                                                        <div class="row justify-content-center">
                                                            <div class="text-center">@dat.Theme</div>
                                                        </div>
                                                    </td>
                               
                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.6.0/jquery.min.js"></script>
<script>
    function ValidateForm() {
        var isValid = true;
        var theme = $("#theme").val();

        $("#theme").on("input", function () {
            var inputVal = $(this).val();
            if (inputVal !== "") {
                $(this).css("border-color", "");
                $("#themeError").text("");
            }
        });

        if (theme === "") {
            $("#theme").css("border-color", "red");
            $("#themeError").text("Theme is required.");
            isValid = false;
        }

        return isValid;
    }

    $(document).ready(function () {
        $('#AddThemeBtn').click(function () {
            if (ValidateForm()) {
                var theme = $('#theme').val().trim();
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("ThemeChanger", "Theme")',
                    contentType: 'application/json',
                    data: JSON.stringify({ Theme: theme }),
                    success: function (response) {
                        if (response) {
                            swal({
                                text: "Theme Updated successfully !!",
                            }).then(() => {
                                location.reload();
                            });
                        }
                    },
                    error: function (xhr, status, error) {
                        swal({
                            text: "Unable to update the theme details. Please check the logs.",
                        });q
                        console.error('Error:', error);
                    }
                });
            }
        });
    });
</script>
