@using Kaizen.Models.ViewUserModel
@model ViewUserallModel

@{
    Layout = "SidebarLayout";
}
@{
    var userCount = Model.UsergridList?.Count ?? 0;
}
<style>
    card-container {
        margin-bottom: 20px;
    }

    .card {
        padding: 15px;
    }

    .card-header {
        font-weight: bold;
    }

    .card-item {
        background-color: rgb(135, 206, 235, 0.5);
        color: black;
        border: 1px dashed #007bff;
        text-align: center;
        border-radius: 10px;
        margin-left: 5px;
        margin-right: 15px;
        margin-bottom: 10px;
        cursor: pointer;
        font-weight: 600;
    }

</style>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.2/css/all.min.css" crossorigin="anonymous">
<script src="https://code.jquery.com/jquery-3.5.1.min.js" crossorigin="anonymous"></script>
<link href="~/assets/css/custom/viewuser.css" rel="stylesheet" />
<div class="container-fluid" style="padding-bottom:12px;">
    <form id="filterForm">
        <div class="container-fluid rounded bg-white p-2  mt-2 mb-2">
            <div class="col-lg-12 p-md-0 p-2">
                <div class="welcome-text">
                    <label class="" id="dHeader">Masters --> View Users</label>
                </div>
            </div>
        </div>
        <div id="loader-wrapper" style="display:none;">
            <div id="loader"></div>
        </div>
        <div class="tab-pane fade show active" id="nav-home" role="tabpanel" aria-labelledby="nav-home-tab">
            <div class="card" id="main-container">
                <!-- First Row of Cards -->
                <div class="card-container">
                    <div class="card mt-2">
                        <div class="card-header">Filter As Per Domain</div>
                        <div class="card-body">
                            <div class="row">
                                @foreach (var domain in Model.DomainList)
                                {
                                    <div class="col-md-4 col-lg-3 col-xl-2 card-item" data-domain-name="@domain.DomainName" data-domainid="@domain.Id">
                                        <div>@domain.DomainName</div>
                                        <div>@domain.User_count</div>
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="card p-3 mt-2 mb-2 cardsize">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label for="inputName">Name</label>
                    <input type="text" id="inputName" class="form-control txt-width" placeholder="Name" name="Name">
                </div>
                <div class="form-group col-md-3">
                    <label for="inputEmpID">Emp ID</label>
                    <input type="text" id="inputEmpID" class="form-control txt-width" placeholder="Employee ID" name="EmpId">
                </div>
                <div class="form-group col-md-3">
                    <label for="inputEmail">Email</label>
                    <input type="email" id="inputEmail" class="form-control txt-width" placeholder="Email" name="Email">
                </div>
                <div class="form-group col-md-3">
                    <label for="inputUserType">User Type</label>
                    <select id="inputUserType" class="form-control txt-width" name="UserType">
                        <option selected>All</option>
                        @if (Model.UserTypeList != null)
                        {
                            foreach (var userType in Model.UserTypeList)
                            {
                                <option value="@userType.UserTypeId">@userType.UserDesc</option>
                            }
                        }
                    </select>
                </div>
            </div>
            <div class="form-row">
                <div class="form-group col-md-4" style="display:none">
                    <label for="inputDomain">Domain</label>
                    <select id="inputDomain" class="form-control txt-width" name="Domain">
                        <option selected>All</option>
                        @if (Model.DomainList != null)
                        {
                            @foreach (var domain in Model.DomainList)
                            {
                                <option value="@domain.Id">@domain.DomainName</option>
                            }
                        }
                    </select>
                </div>
                <div class="form-group col-md-4" style="display:none">
                    <label for="inputDepartment">Department</label>
                    <select id="inputDepartment" class="form-control txt-width" name="Department">
                        <option selected>All</option>
                    </select>
                </div>
                <div class="form-group col-md-4">
                    <input type="button" id="btn_filter" class="btn btn-azure" style="width:116px;" value="Filter" />
                    <button type="button" id="btnreset" class="btn btn-warning" style="width:116px;">Reset</button>

                </div>
            </div>
        </div>
        <div class="custom-line mb-3"></div>
        <div class="card viewuserCardBody p-3" id="grid">
            <div class="row">
                <div class="col-md-8" style="font-weight:bold">
                    <div>
                        <p style="font-weight:bold;font-size: 16px">
                            User List - <span id="blkuserlist" style="font-size: 16px">@userCount</span>
                        </p>    
                    </div>
                </div>
                <div class="col-md-12" style="font-weight:bold; display: flex; justify-content: end; align-items: center;">
                    <div class="row">
                        <div class="col text-center d-flex justify-content-center align-items-center">
                            <button type="button" class="btn btn-block-custom btn-warning no-margin" style="width:100px;" data-toggle="modal" data-target="#importExcelModel">Import Kaizen</button>
                        </div>
                    </div>
                </div>


               
            </div>
            <div id="userGridContainer" style="padding:2px">

                @await Html.PartialAsync("_UserGridPartial", Model.UsergridList)

            </div>
            <div class="modal fade" id="importExcelModel" tabindex="-1" role="dialog" aria-labelledby="importExcelModelLabel" aria-hidden="true">
                <div class="modal-dialog modal-lg" role="document">
                    <div class="modal-content">
                        <div class="modal-header">
                            <h5 class="modal-title" id="importExcelModelLabel">
                                Import Users / Employees :
                                <button type="button" class="btn btn-block-custom btn-warning" style="width:200px;" onclick="DownloadTemplate();">Download Sample Excel</button>
                            </h5>
                            <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                <span aria-hidden="true">&times;</span>
                            </button>
                        </div>
                        <div class="modal-body">
                            <div class="form-row">
                                <div class="form-group col-md-3">
                                    <label for="inputstatus">Status<span class="text-danger">*</span></label>
                                    <select id="ModalStatus" class="form-control">
                                        <option selected value="0">--Select Status--</option>
                                        @if (Model.StatusList != null)
                                        {
                                            foreach (var status in Model.StatusList)
                                            {
                                                <option value="@status.StatusID">@status.StatusName</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="inputUserType">User Type<span class="text-danger">*</span></label>
                                    <select class="form-control" id="ModalUserType">
                                        <option selected value="0">--Select Usertype--</option>
                                        @if (Model.UserTypeList != null)
                                        {
                                            foreach (var userType in Model.UserTypeList)
                                            {
                                                <option value="@userType.UserTypeId">@userType.UserDesc</option>
                                            }
                                        }
                                    </select>
                                </div>
                                <div class="form-group col-md-3">
                                    <label for="inputpassword">Password to all<span class="text-danger">*</span></label>
                                    <input type="text" id="ModalPassword" class="form-control" placeholder="Password to all">
                                </div>
                                <div class="form-group col-md-3">
                                    <label>Upload<span class="text-danger">*</span></label>
                                    <input type="file" id="file" name="file" class="form-control" accept=".xlsx, .xls">
                                </div>

                            </div>
                            <div class="form-row">
                                <div class="form-group col-md-3">
                                    <button type="button" id="uploadusers" class="btn btn-block-custom btn-azure" style="width:100%;margin-left:0px;">Upload & Submit</button>
                                </div>
                            </div>
                        </div>
                        <div class="modal-footer">
                            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </form>
</div>
@* <script>
    $(document).ready(function () {
        $('#inputDomain').change(function () {
            var Domain = $('#inputDomain').val();
            var dropdown = $('#inputDepartment');
            if (Domain.toLowerCase() === 'all') {
                dropdown.empty();
                dropdown.append($('<option>', {
                    value: 'all',
                    text: 'All'
                }));
                return;
            }
            $.ajax({
                type: 'GET',
                url: '/ViewUser/FetchDepartment',
                dataType: "json",
                data: { domainid: Domain },
                success: function (result) {
                    if (result) {
                        dropdown.empty();
                        dropdown.append($('<option>', {
                            value: 'all',
                            text: 'All'
                        }));
                        for (var i = 0; i < result.length; i++) {
                            $('#inputDepartment').append('<option value="' + result[i].deptId + '">' + result[i].departmentName + '</option>');
                        }
                    }
                    else {
                        swal('Please Select Domain');
                    }
                },
                error: function (error) {
                }
            });
        });
    });
</script> *@
<script>
    $('#btn_filter').click(function () {
        debugger
        var Name = $('#inputName').val();
        var EmpId = $('#inputEmpID').val();
        var Email = $('#inputEmail').val();
        var UserType = $('#inputUserType option:selected').text();
        var Domain = $('#inputDomain option:selected').text();
        var Department = $('#inputDepartment option:selected').text();
        $.ajax({
            url: '@Url.Action("ViewFilterUser", "ViewUser")',
            type: 'GET',
            data: {
                Name: Name,
                EmpId: EmpId,
                Email: Email,
                UserType: UserType,
                Domain: Domain,
                Department: Department
            },
            beforeSend: function () {
                $('#loader-wrapper').show();
            },
            success: function (result) {
               
                var rows = [];
                $(result).find('tbody tr').each(function () {
                    var $row = $(this);
                    var rowData = {
                        empid: $row.data('empid'),
                        name: $row.data('name'),
                        email: $row.data('email'),
                        gender: $row.data('gender'),
                        domain: $row.data('domain'),
                        department: $row.data('department'),
                        usertype: $row.data('usertype'),
                        status: $row.data('status'),
                        phoneno: $row.data('phoneno'),
                        password: $row.data('password'),
                        cadre: $row.data('cadre'),
                        ImageApprove: $row.data('imageapprover')

                    };
                    rows.push(rowData);
                });
                var recordCount = rows.length;
                var blktotalElement = document.getElementById('blkuserlist');
                if (blktotalElement) {
                    blktotalElement.textContent = recordCount;
                }
                $('#userGridContainer').html(result);
            },
            complete: function () {
                setTimeout(function () {
                    $('#loader-wrapper').hide();
                }, 3000);
            }
        });
    });

</script>
<script>
    function DownloadTemplate() {
        const link = document.createElement('a');
        link.setAttribute('target', '_blank');
        link.setAttribute('href', '' + '/Assets/Template/sample_users.xlsx');
        link.setAttribute('download', `sample_users.xlsx`);
        document.body.appendChild(link);
        link.click();
    }
</script>
<script>
    $(document).ready(function () {
        $('#uploadusers').click(function () {
            var fileInput = $('#file')[0];
            var file = fileInput.files[0];

            var StatusModal = $('#ModalStatus option:selected').text();
            var UserTypemodal = $('#ModalUserType option:selected').text();
            var PasswordModal = $('#ModalPassword').val();

            if (!StatusModal || !UserTypemodal || !PasswordModal) {
                swal('Please select all fields.');
                return;
            }

            if (file) {
                var formData = new FormData();
                formData.append('file', file);
                formData.append('Status', StatusModal);
                formData.append('UserType', UserTypemodal);
                formData.append('Password', PasswordModal);

                $.ajax({
                    url: '/ViewUser/Upload',
                    type: 'POST',
                    data: formData,
                    processData: false,
                    contentType: false,
                    success: function (response) {
                        $('#ModalStatus').prop('selectedIndex', 0);
                        $('#ModalUserType').prop('selectedIndex', 0);
                        $('#ModalPassword').val('');
                        $('#file').val('');

                        if (response === "File uploaded and data processed successfully.") {
                            swal({
                                title: "Success!",
                                text: response,
                                icon: "success",
                            }).then((value) => {
                                window.location.reload();
                            });
                        } else {
                            swal({
                                title: "Warning!",
                                text: response,
                                icon: "warning",
                            });
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        console.log("Error response:", jqXHR, textStatus, errorThrown);
                        swal({
                            title: "Error!",
                            text: "File upload failed due to an internal server error.",
                            icon: "error",
                        });
                    }
                });
            } else {
                swal('Please select a file to upload.');
            }
        });
    });

</script>
<script>
    $(document).ready(function () {
        function Resetform() {
            $('#inputEmpID').val('');
            $('#inputEmail').val('');
            $('#inputName').val('');
            $('#inputUserType').prop('selectedIndex', 0);
        }

        // $('#btnreset').click(function () {
        //     Resetform();
        //     location.reload();
        // });

        // Click event for the reset button to navigate back to ViewUser
        $('#btnreset').click(function () {
            // Determine if we're on the ViewUserByDomainID page
            var currentUrl = window.location.href;
            if (currentUrl.includes('/ViewUser/ViewUserByDomainID')) {
                // Redirect to the ViewUser page
                window.location.href = '@Url.Action("ViewUser", "ViewUser")';
            } else {
                // If not on the ViewUserByDomainID page, simply reload the page
                location.reload();
            }
        });
    });
</script>
<script>
    $('.card-item').click(function () {
        var Domain = $(this).data('domain-name');
        $.ajax({
            url: '@Url.Action("ViewFilterUser", "ViewUser")',
            type: 'GET',
            data: {
                Domain: Domain,
            },
            beforeSend: function () {
                $('#loader-wrapper').show();
            },
            success: function (result) {
                var rows = [];
                $(result).find('tbody tr').each(function () {
                    var $row = $(this);
                    var rowData = {
                        empid: $row.data('empid'),
                        name: $row.data('name'),
                        email: $row.data('email'),
                        gender: $row.data('gender'),
                        domain: $row.data('domain'),
                        department: $row.data('department'),
                        usertype: $row.data('usertype'),
                        status: $row.data('status'),
                        phoneno: $row.data('phoneno'),
                        password: $row.data('password'),
                        cadre: $row.data('cadre'),
                        ImageApprove: $row.data('imageapprover')
                    };
                    rows.push(rowData);
                });
                var recordCount = rows.length;
                var blktotalElement = document.getElementById('blkuserlist');
                if (blktotalElement) {
                    blktotalElement.textContent = recordCount;
                }
                $('#userGridContainer').html(result);
            },
            complete: function () {
                setTimeout(function () {
                    $('#loader-wrapper').hide();
                }, 3000);
            }
        });
    });
</script>