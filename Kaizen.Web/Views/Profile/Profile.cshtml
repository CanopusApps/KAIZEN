@inject IHttpContextAccessor Accessor

@model Kaizen.Models.AdminModel.ProfileModel;
@{
    Layout = "SidebarLayout";
}
<style>
    .btn-azure {
        color: #fff !important;
    }

    .input-width {
        width: 100%;
    }

    #ProfileHeader {
        color: dodgerblue;
        font-size: 20px;
    }

</style>

<div class="card">
    <div class="card rounded bg-white p-2  mt-2 ml-2 mr-2 mb-2">
        <div class="fw-semibold" id="ProfileHeader"><h1>My Profile</h1></div>
        <p>Kaizen > My Profile > Edit My Profile</p>
    </div>
</div>
<div class="custom-line mb-3"></div>
<div class="card p-2">
    <div class="card-body">
        <h1>Edit My Profile</h1>
        <hr />
        <div class="mt-3">
            <div class="form-row">
                <div class="form-group col-md-3">
                    <label for="displayEmpID">Emp ID</label>
                    <span class="text-danger">*</span>
                    <input type="text" id="displayEmpID" class="form-control txt-width" name="EmpID" value=@Accessor.HttpContext.Session.GetString("EmpId") readonly>
                    @* <h2>614614</h2> *@                    
                </div>
                <div class="form-group col-md-3">
                    <label for="inputFirstName">First Name</label>
                    <span class="text-danger">*</span>
                    <input type="text" id="inputFirstName" class="form-control txt-width" placeholder="First Name" name="FirstName" value="@Model.FirstName">
                    <span id="FirstNameError" class="error-message"></span>
                </div>
                <div class="form-group col-md-3">
                    <label for="inputMiddleName">Middle Name</label>
                    <input type="text" id="inputMiddleName" class="form-control txt-width" placeholder="Middle Name" name="MiddleName" value="@Model.MiddleName">
                </div>
                <div class="form-group col-md-3">
                    <label for="inputLastName">Last Name</label>
                    <span class="text-danger">*</span>
                    <input type="text" id="inputLastName" class="form-control txt-width" placeholder="Last Name" name="LastName" value="@Model.LastName">
                    <sapn id="LastNameError" class="error-message"></sapn>
                </div>
            </div>

            <div class="form-row">
                <div class="form-group col-md-3">
                    <label for="Gender">Gender</label>
                    <span class="text-danger">*</span>
                    <div class="row">
                        @if((Model.Gender).ToString() != null && (Model.Gender).ToString() == "M")
                        {
                            <div class="form-check">
                                <input type="radio" name="Gender" id="maleRadio" value="M" checked />Male
                                <input type="radio" name="Gender" id="femaleRadio" value="F" disabled />Female
                                <input type="radio" name="Gender" id="otherRadio" value="O" disabled />Other
                            </div>
                        }
                        @if((Model.Gender).ToString() != null && (Model.Gender).ToString() == "F")
                        {
                            <div class="form-check">
                                <input type="radio" name="Gender" id="maleRadio" value="M" disabled />Male
                                <input type="radio" name="Gender" id="femaleRadio" value="F" checked />Female
                                <input type="radio" name="Gender" id="otherRadio" value="O" disabled />Other
                            </div>
                        }
                        @if ((Model.Gender).ToString() != null && (Model.Gender).ToString() == "O")
                        {
                            <div class="form-check">
                                <input type="radio" name="Gender" id="maleRadio" value="M" disabled />Male
                                <input type="radio" name="Gender" id="femaleRadio" value="F" disabled />Female
                                <input type="radio" name="Gender" id="otherRadio" value="O" checked />Other
                            </div>
                        }
                    </div>
                </div>
                <div class="form-group col-md-3">
                    <label for="Domain">Domain</label>
                    <span class="text-danger">*</span>
                    <input type="text" id="displayDomain" class="form-control txt-width" name="Domain" value="@Model.Domain" readonly />
                    @* <h1>Quality</h1> *@
                </div>
                <div class="form-group col-md-3">                    
                    <label for="Department">Department</label>
                    <span class="text-danger">*</span>
                    <input type="text" id="displayDepartment" class="form-control txt-width" name="Department" value="@Model.Department" readonly />
                    @* <h1>Quality</h1> *@
                </div>
                <div class="form-group col-md-3">
                    <label for="Email">Email</label>
                    <span class="text-danger">*</span>                    
                    <input type="email" name="Email" id="empEmail" placeholder="Email" class="form-control txt-width" value="@Model.Email" />
                    <span id="empEmailError" class="error-message"></span>
     
                </div>
                @* <div class="form-group col-md-3">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                    <span class="text-danger">*</span>
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email ID", @type="email" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div> *@
            </div>

            <br />
            <div class="form-row">
                <div class="form-group col-md-4">
                    <button class="btn btn-azure btn-lg" id="btnProfileUpdate">Update My Profile</button>
                </div>
            </div>

         
        </div>
    </div>
</div>


<script>
    function ValidateData(model) {
        debugger;
        var isValid = true;

        // var firstNameValue = $("#inputFirstName").val();
        // var lastNameValue = $("#inputLastName").val();
        // var emailValue = $("#empEmail").val();

        var firstNameValue = model.FirstName;
        var lastNameValue = model.LastName;
        var emailValue = model.Email;
        if (firstNameValue === "") {
            $("#inputFirstName").css("border-color", "red");
            $("#FirstNameError").text("First Name is required.");
            isValid = false;
        }
        if (lastNameValue === "") {
            $("#inputLastName").css("border-color", "red");
            $("#LastNameError").text("Last Name is required.");
            isValid = false;
        }
        if (emailValue === "") {
            $("#empEmail").css("border-color", "red");
            $("#empEmailError").text("Email is required.");
            isValid = false;
        }
        if (IsEmail(emailValue)) {
            $("#empEmailError").css("color", "red");
            $("#empEmailError").text("Entered Email is not Valid!");
            return false;
        }   
        
        return isValid;
    }

     function IsEmail(emailValue){
         // var emailTextBox = document.getElementById("empEmail");
         var email = emailValue.toString();
         const emailRegex = /^([a-zA-Z0-9_\.\-\+])+@@(([a - zA - Z0 - 9\-])+\.)+([a-zA-Z0-9]{2,4})+$/;
    //     debugger;
    //     const regex = /^([a-zA-Z0-9_\.\-\+])+\(([a - zA - Z0 - 9\-]) +\.)+([a-zA-Z0-9]{2,4})+$/;        

         // if (email.test(emailRegex)) {
         //    if (email.includes(/^@@$/){
         //        // if (email.includes(/^"gmail.com"$/) {
         //        //     return true;
         //        // }
         //        // else{
         //        //     return
         //        // }
         //    }
         //    return false;
         // } 
         if (email.test(emailRegex)) {            
             if (email.includes("gmail.com") 
                    return true;
         } 
             
            return false;
     }
        // if (!emailRegex.test(emailValue)) {
        //     return false;
        // }
        
         // if (!emailRegex.test(email)) {
         //    $("#empEmailError").css(text("Email is InValid."),"red");
         // }
     }
</script>
<script>

    $(document).ready(function () {        

        $("#btnProfileUpdate").click(function () {
            debugger;

            var profilemodel = {
                EmpID: $('#displayEmpID').val(),
                FirstName: $('#inputFirstName').val().trim(),
                MiddleName: $('#inputMiddleName').val(),
                LastName: $('#inputLastName').val(),
                Email: $('#empEmail').val()
            };
            if (!ValidateData(profilemodel)) {
                return;
            }
            $.ajax({
                type: 'POST',
                url: '/Profile/Profile',
                dataType: "json",
                data: { model: profilemodel },
                success: function (result) {
                    var redirectErrorUrl = "/Login/ErrorPage";
                    if (result == true) {
                        swal({
                            text: "Profile  Updated Successfully !!",
                            type: "success"
                        }).then(function () {   });
                    }
                    else {
                        swal('Unable to Update Profile, Please check the Logs');
                        // window.location.href = redirectErrorUrl;
                    }
                },
                error: function (error) {
                    swal('Unable to update the profile, Please check the Logs folder');
                    window.location.href = redirectErrorUrl;
                }
            });
        });
    });
</script>   