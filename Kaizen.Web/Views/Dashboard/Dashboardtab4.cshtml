@model Kaizen.Models.DashboardModel.DashboardModel;
@{
    Layout = "SidebarLayout";
}
<link href="~/assets/css/custom/dashboard.css" rel="stylesheet" />
<script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
<style>
    #dHeader {
        text-align: center;
        font-size: 16px !important;
        margin-top: -10px;
        margin-left: 7px;
    }
</style>
<div class="card ml-2 mr-2 bg-light ">
<nav>
    <div class="container-fluid rounded bg-white p-2  mt-2 mb-2">
        <div class="col-lg-12 p-md-0 p-2">
            <div class="welcome-text">
                <label id="dHeader">Masters -->Dashboard</label>
            </div>
        </div>
    </div>
    <nav>
        <div class="nav nav-tabs" id="nav-tab" role="tablist">
            <a class="nav-link " id="nav-home-tab" href="@Url.Action("Dashboardtab1", "Dashboard")" role="tab" aria-controls="nav-home" aria-selected="false">Total Kaizen's Submitted</a>
            <a class="nav-link" id="nav-profile-tab" href="@Url.Action("Dashboardtab2", "Dashboard")" role="tab" aria-controls="nav-profile" aria-selected="false">Filter by Department, Domain</a>
            <a class="nav-link" id="nav-contact-tab" href="@Url.Action("Dashboardtab3", "Dashboard")" role="tab" aria-controls="nav-contact" aria-selected="false">Monthly, Yearly table</a>
            <a class="nav-link active" id="nav-contact-tab" href="@Url.Action("Dashboardtab4", "Dashboard")" role="tab" aria-controls="nav-contact" aria-selected="true">Graphs</a>
        </div>
    </nav>
        <div class="container-fluid border rounded p-2" style="width:100%">

            <form>
                <div class="card p-3 mt-2 mb-2">
                    <div class="row mb-2">
                        <div class="form-group col-lg-4">
                            <label for="inputDomain">Domain<span class="text-danger">*</span></label>
                            <select id="inputDomain" class="form-control txt-width" name="Domain">
                                <option value="0" selected>All</option>
                                @if (Model.DomainList != null)
                                {
                                    @foreach (var domain in Model.DomainList)
                                    {
                                        <option value="@domain.Id">@domain.DomainName</option>
                                    }
                                }
                            </select>
                        </div>
                        <div class="form-group col-lg-4">
                            <label for="inputDepartment">Department<span class="text-danger">*</span></label>
                            <select id="inputDepartment" class="form-control txt-width" name="Department">
                                <option selected>All</option>
                            </select>
                        </div>
                        <div class="form-group col-lg-2">
                            <label for="inputUserType">Start-Date<span class="text-danger">*</span></label>
                            <div>
                                <input class="form-control txt-width" id="dtstartdate" type="date" name="name" value="">
                            </div>

                        </div>
                        <div class="form-group col-lg-2">
                            <label for="inputUserType">End-Date<span class="text-danger">*</span></label>
                            <div>
                                <input class="form-control txt-width" id="dtenddate" type="date" name="name" value="" />
                            </div>

                        </div>
                        <span class="form-row p-4 container">
                            <button type="button" class="btn  col-lg-2 m-1 btn-azure " id="btn_filter" value="Filter">Filter</button>
                            <button type="reset" class="btn col-lg-2 m-1 btn-warning" id="configreset" value="Reset">Reset</button>

                        </span>
                    </div>
            </form>
        </div>

        <div class="card bg-white border chart-container mt-4 mb-4 ml-2 mr-2">
            <div class="  card-header"> Submitted Kaizen Chart </div>
            <div class="card-body">
                <div class="d-flex justify-content-center flex-wrap">
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="myBarChart"></canvas>
                    </div>
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="paretoChart"></canvas>
                    </div>
                </div>
            </div>
        </div>
        <div class="card bg-white border chart-container mt-4 mb-4 ml-2 mr-2">
            <div class="  card-header">Kaizens Based on Cadre,Blocks</div>
            <div class="card-body col-lg-12">
                <div class="row">
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="donutChart1"></canvas>
                    </div>
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="donutChart2"></canvas>
                    </div>
                </div>
                <div class="row">
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="donutChart3"></canvas>
                    </div>
                    <div class="col-lg-6 col-md-12 mb-4">
                        <canvas id="donutChart4"></canvas>
                    </div>
                </div>
            </div>
        </div>
  </nav>
  </div>
<script>
    // JavaScript for rendering the bar chart
    $(document).ready(function () {

        var ctx = document.getElementById('myBarChart').getContext('2d');
        var myBarChart = new Chart(ctx, {
            type: 'bar',
            data: {
                labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
                datasets: [
                    {
                        label: 'Total',
                        data: [29, 25, 30, 22, 35, 27, 32, 28, 31, 24, 26, 30],
                        backgroundColor: 'rgba(153, 102, 255, 0.2)',
                        borderColor: 'rgba(153, 102, 255, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Approved',
                        data: [12, 10, 14, 9, 16, 11, 15, 13, 14, 10, 12, 14],
                        backgroundColor: 'rgba(54, 162, 235, 0.2)',
                        borderColor: 'rgba(54, 162, 235, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Rejected',
                        data: [19, 17, 21, 14, 23, 19, 22, 20, 21, 16, 18, 22],
                        backgroundColor: 'rgba(255, 99, 132, 0.2)',
                        borderColor: 'rgba(255, 99, 132, 1)',
                        borderWidth: 1
                    },
                    {
                        label: 'Pending',
                        data: [3, 2, 4, 1, 5, 2, 3, 2, 4, 2, 3, 4],
                        backgroundColor: 'rgba(255, 206, 86, 0.2)',
                        borderColor: 'rgba(255, 206, 86, 1)',
                        borderWidth: 1
                    }
                ]
            },
            options: {
                scales: {
                    y: {
                        beginAtZero: true
                    }
                },
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Kaizen based on months '
                    }
                }
              
                   
            }
        });

        $('#inputDomain').change(function () {
            var Domain = $('#inputDomain').val().trim();
            $.ajax({
                type: 'POST',
                url: '/Admin/FetchDepartment',
                dataType: "json",
                data: { DomainID: Domain },
                success: function (result) {
                    if (result) {
                        var dropdown = $('#inputDepartment');
                        dropdown.empty();
                        dropdown.append($('<option>', {
                            value: 'all',
                            text: 'Select Department'
                        }));
                        for (var i = 0; i < result.length; i++) {
                            $('#inputDepartment').append('<option value="' + result[i].deptId + '">' + result[i].departmentName + '</option>');
                        }
                    } else {
                        Swal.fire('Please Select Domain');
                    }
                },
                error: function (error) {
                }
            });
        });
        
    
    });



</script>
<script>
    $(document).ready(function () {
        // Pareto Chart
        const ctxPareto = $('#paretoChart')[0].getContext('2d');
        const dataPareto = {
            labels: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December'],
            datasets: [{
                type: 'bar',
                label: 'Total Kaizen',
                data: [29, 25, 30, 22, 35, 27, 32, 28, 31, 24, 26, 30],
                backgroundColor: 'rgba(54, 162, 235, 0.6)',
                borderColor: 'rgba(54, 162, 235, 1)',
                borderWidth: 1
            }, {
                type: 'line',
                label: 'Line based ',
                data: [29, 25, 30, 22, 35, 27, 32, 28, 31, 24, 26, 30],
                borderColor: 'rgba(255, 99, 132, 1)',
                borderWidth: 2,
                fill: false,
                tension: 0.1
            }]
        };

        const paretoChart = new Chart(ctxPareto, {
            data: dataPareto,
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Kaizen Pareto chart'
                    }
                },
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return value;
                            }
                        }
                    }
                }
            }
        });
    });
</script>
<script>
    $(document).ready(function () {
        // Donut Chart 1
        const ctxDonut1 = $('#donutChart1')[0].getContext('2d');
        const donutChart1 = new Chart(ctxDonut1, {
            type: 'doughnut',
            data: {
                labels: ['Red', 'Blue', 'Yellow'],
                datasets: [{
                    label: 'Dataset 1',
                    data: [300, 50, 100],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Based on cadre'
                    }
                }
            }
        });

        // Donut Chart 2
        const ctxDonut2 = $('#donutChart2')[0].getContext('2d');
        const donutChart2 = new Chart(ctxDonut2, {
            type: 'doughnut',
            data: {
                labels: ['Red', 'Blue', 'Yellow'],
                datasets: [{
                    label: 'Dataset 2',
                    data: [150, 200, 90],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Based on Blocks'
                    }
                }
            }
        });

        // Donut Chart 3
        const ctxDonut3 = $('#donutChart3')[0].getContext('2d');
        const donutChart3 = new Chart(ctxDonut3, {
            type: 'doughnut',
            data: {
                labels: ['Red', 'Blue', 'Yellow'],
                datasets: [{
                    label: 'Dataset 3',
                    data: [200, 150, 120],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Based on Domains'
                    }
                }
            }
        });

        // Donut Chart 4
        const ctxDonut4 = $('#donutChart4')[0].getContext('2d');
        const donutChart4 = new Chart(ctxDonut4, {
            type: 'doughnut',
            data: {
                labels: ['Red', 'Blue', 'Yellow'],
                datasets: [{
                    label: 'Dataset 4',
                    data: [180, 80, 140],
                    backgroundColor: [
                        'rgb(255, 99, 132)',
                        'rgb(54, 162, 235)',
                        'rgb(255, 205, 86)'
                    ],
                    hoverOffset: 4
                }]
            },
            options: {
                responsive: true,
                plugins: {
                    legend: {
                        position: 'top',
                    },
                    title: {
                        display: true,
                        text: 'Based on Departments'
                    }
                }
            }
        });
    
    });

</script>